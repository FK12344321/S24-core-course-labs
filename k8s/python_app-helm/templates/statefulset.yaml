apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "python_app-helm.fullname" . }}
  labels:
    {{- include "library-chart.labels" . | indent 4 }}
spec:
  serviceName: {{ include "python_app-helm.fullname" . }}
  podManagementPolicy: "Parallel"
  {{- if not .Values.autoscaling.enabledStatefulSet }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "library-chart.labels" . | indent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ include "python_app-helm.fullname" . }}
        {{- include "library-chart.labels" . | indent 8 }}
        # {{- with .Values.podLabels }}
        # {{- toYaml . | nindent 8 }}
        # {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "python_app-helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: env-config-map
          env:
            # - name: MY_SECRET 
            #   valueFrom: 
            #     secretKeyRef:
            #       name: my-secret
            #       key: secret_key
            {{- include "python_app-helm.env.variable1" . | nindent 12 }}
            {{- include "python_app-helm.env.variable2" . | nindent 12 }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      initContainers:
        - name: install
          image: busybox:1.28
          command:
          - wget
          - "-O"
          - "/work-dir/index.html"
          - http://info.cern.ch
          volumeMounts:
          - name: workdir
            mountPath: "/work-dir"
        - name: init-container-1
          image: busybox:1.28
          command:
          - /bin/sh
          - -c
          - |
            echo '1' > /work-dir/bonus
          volumeMounts:
          - name: workdir
            mountPath: "/work-dir"
        - name: init-container-2
          image: busybox:1.28
          command:
          - /bin/sh
          - -c
          - |
            echo '2' >> /work-dir/bonus
          volumeMounts:
          - name: workdir
            mountPath: "/work-dir"
        - name: init-container-3
          image: busybox:1.28
          command:
          - /bin/sh
          - -c
          - |
            echo '3' >> /work-dir/bonus
          volumeMounts:
          - name: workdir
            mountPath: "/work-dir"
      dnsPolicy: Default
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- with .Values.volumeClaimTemplates }}
  volumeClaimTemplates:
    {{- toYaml . | nindent 4 }}
  {{- end }}
